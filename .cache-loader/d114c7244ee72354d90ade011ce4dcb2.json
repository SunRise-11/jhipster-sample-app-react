{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management.tsx","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management.tsx","mtime":1522786297616},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar react_redux_1 = require(\"react-redux\");\nvar react_router_dom_1 = require(\"react-router-dom\");\nvar reactstrap_1 = require(\"reactstrap\");\nvar react_jhipster_1 = require(\"react-jhipster\");\nvar fa_1 = require(\"react-icons/lib/fa\");\nvar constants_1 = require(\"app/config/constants\");\nvar pagination_constants_1 = require(\"app/shared/util/pagination.constants\");\nvar user_management_reducer_1 = require(\"./user-management.reducer\");\nvar UserManagement = /** @class */ (function (_super) {\n    tslib_1.__extends(UserManagement, _super);\n    function UserManagement() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = tslib_1.__assign({}, react_jhipster_1.getSortState(_this.props.location, pagination_constants_1.ITEMS_PER_PAGE));\n        _this.sort = function (prop) { return function () {\n            _this.setState({\n                order: _this.state.order === 'asc' ? 'desc' : 'asc',\n                sort: prop\n            }, function () { return _this.sortUsers(); });\n        }; };\n        _this.handlePagination = function (activePage) { return _this.setState({ activePage: activePage }, function () { return _this.sortUsers(); }); };\n        _this.getUsers = function () {\n            var _a = _this.state, activePage = _a.activePage, itemsPerPage = _a.itemsPerPage, sort = _a.sort, order = _a.order;\n            _this.props.getUsers(activePage - 1, itemsPerPage, sort + \",\" + order);\n        };\n        _this.toggleActive = function (user) { return function () {\n            _this.props.updateUser(tslib_1.__assign({}, user, { activated: !user.activated }));\n        }; };\n        return _this;\n    }\n    UserManagement.prototype.componentDidMount = function () {\n        this.getUsers();\n    };\n    UserManagement.prototype.sortUsers = function () {\n        this.getUsers();\n        this.props.history.push(this.props.location.pathname + \"?page=\" + this.state.activePage + \"&sort=\" + this.state.sort + \",\" + this.state.order);\n    };\n    UserManagement.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, users = _a.users, account = _a.account, match = _a.match, totalItems = _a.totalItems;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", null,\n                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.home.title\" }, \"Users\"),\n                React.createElement(react_router_dom_1.Link, { to: match.url + \"/new\", className: \"btn btn-primary float-right jh-create-entity\" },\n                    React.createElement(fa_1.FaPlus, null),\n                    \" \",\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.home.createLabel\" }, \"Create a new user\"))),\n            React.createElement(\"div\", { className: \"table-responsive\" },\n                React.createElement(\"table\", { className: \"table table-striped\" },\n                    React.createElement(\"thead\", null,\n                        React.createElement(\"tr\", null,\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('id') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"global.field.id\" }, \"ID\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('login') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.login\" }, \"Login\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('email') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.email\" }, \"Email\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", null),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('langKey') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.langKey\" }, \"Lang Key\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", null,\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.profiles\" }, \"Profiles\")),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('createdDate') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.createdDate\" }, \"Created Date\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('lastModifiedBy') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.lastModifiedBy\" }, \"Last Modified By\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('lastModifiedDate') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.lastModifiedDate\" }, \"Last Modified Date\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", null))),\n                    React.createElement(\"tbody\", null, users.map(function (user, i) { return (React.createElement(\"tr\", { key: \"user-\" + i },\n                        React.createElement(\"td\", null,\n                            React.createElement(reactstrap_1.Button, { tag: react_router_dom_1.Link, to: match.url + \"/\" + user.login, color: \"link\", size: \"sm\" }, user.id)),\n                        React.createElement(\"td\", null, user.login),\n                        React.createElement(\"td\", null, user.email),\n                        React.createElement(\"td\", null, user.activated ? (React.createElement(reactstrap_1.Button, { color: \"success\", onClick: _this.toggleActive(user) }, \"Activated\")) : (React.createElement(reactstrap_1.Button, { color: \"danger\", onClick: _this.toggleActive(user) }, \"Deactivated\"))),\n                        React.createElement(\"td\", null, user.langKey),\n                        React.createElement(\"td\", null, user.authorities\n                            ? user.authorities.map(function (authority, j) { return (React.createElement(\"div\", { key: \"user-auth-\" + i + \"-\" + j },\n                                React.createElement(\"span\", { className: \"badge badge-info\" }, authority))); })\n                            : null),\n                        React.createElement(\"td\", null,\n                            React.createElement(react_jhipster_1.TextFormat, { value: user.createdDate, type: \"date\", format: constants_1.APP_DATE_FORMAT, blankOnInvalid: true })),\n                        React.createElement(\"td\", null, user.lastModifiedBy),\n                        React.createElement(\"td\", null,\n                            React.createElement(react_jhipster_1.TextFormat, { value: user.lastModifiedDate, type: \"date\", format: constants_1.APP_DATE_FORMAT, blankOnInvalid: true })),\n                        React.createElement(\"td\", { className: \"text-right\" },\n                            React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\n                                React.createElement(reactstrap_1.Button, { tag: react_router_dom_1.Link, to: match.url + \"/\" + user.login, color: \"info\", size: \"sm\" },\n                                    React.createElement(fa_1.FaEye, null),\n                                    ' ',\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                        React.createElement(react_jhipster_1.Translate, { contentKey: \"entity.action.view\" }, \"View\"))),\n                                React.createElement(reactstrap_1.Button, { tag: react_router_dom_1.Link, to: match.url + \"/\" + user.login + \"/edit\", color: \"primary\", size: \"sm\" },\n                                    React.createElement(fa_1.FaPencil, null),\n                                    ' ',\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                        React.createElement(react_jhipster_1.Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))),\n                                React.createElement(reactstrap_1.Button, { tag: react_router_dom_1.Link, to: match.url + \"/\" + user.login + \"/delete\", color: \"danger\", size: \"sm\", disabled: account.login === user.login },\n                                    React.createElement(fa_1.FaTrash, null),\n                                    ' ',\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                        React.createElement(react_jhipster_1.Translate, { contentKey: \"entity.action.delete\" }, \"Delete\"))))))); })))),\n            React.createElement(\"div\", { className: \"row justify-content-center\" },\n                React.createElement(react_jhipster_1.JhiPagination, { items: react_jhipster_1.getPaginationItemsNumber(totalItems, this.state.itemsPerPage), activePage: this.state.activePage, onSelect: this.handlePagination, maxButtons: 5 }))));\n    };\n    return UserManagement;\n}(React.Component));\nexports.UserManagement = UserManagement;\nvar mapStateToProps = function (storeState) { return ({\n    users: storeState.userManagement.users,\n    totalItems: storeState.userManagement.totalItems,\n    account: storeState.authentication.account\n}); };\nvar mapDispatchToProps = { getUsers: user_management_reducer_1.getUsers, updateUser: user_management_reducer_1.updateUser };\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(UserManagement);\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management.tsx","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport {\n  Translate,\n  ICrudGetAllAction,\n  ICrudPutAction,\n  TextFormat,\n  JhiPagination,\n  getPaginationItemsNumber,\n  getSortState,\n  IPaginationBaseState\n} from 'react-jhipster';\nimport { FaPlus, FaEye, FaPencil, FaSort, FaTrash } from 'react-icons/lib/fa';\n\nimport { APP_DATE_FORMAT } from 'app/config/constants';\nimport { IUser } from 'app/shared/model/user.model';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\nimport { getUsers, updateUser } from './user-management.reducer';\n\nexport interface IUserManagementProps {\n  getUsers: ICrudGetAllAction<IUser>;\n  updateUser: ICrudPutAction<IUser>;\n  users: IUser[];\n  account: any;\n  match: any;\n  totalItems: 0;\n  history: any;\n  location: any;\n}\n\nexport class UserManagement extends React.Component<IUserManagementProps, IPaginationBaseState> {\n  state: IPaginationBaseState = {\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\n  };\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => this.sortUsers()\n    );\n  };\n\n  sortUsers() {\n    this.getUsers();\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\n  }\n\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortUsers());\n\n  getUsers = () => {\n    const { activePage, itemsPerPage, sort, order } = this.state;\n    this.props.getUsers(activePage - 1, itemsPerPage, `${sort},${order}`);\n  };\n\n  toggleActive = user => () => {\n    this.props.updateUser({\n      ...user,\n      activated: !user.activated\n    });\n  };\n\n  render() {\n    const { users, account, match, totalItems } = this.props;\n    return (\n      <div>\n        <h2>\n          <Translate contentKey=\"userManagement.home.title\">Users</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\">\n            <FaPlus /> <Translate contentKey=\"userManagement.home.createLabel\">Create a new user</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th className=\"hand\" onClick={this.sort('id')}>\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\n                  <FaSort />\n                </th>\n                <th className=\"hand\" onClick={this.sort('login')}>\n                  <Translate contentKey=\"userManagement.login\">Login</Translate>\n                  <FaSort />\n                </th>\n                <th className=\"hand\" onClick={this.sort('email')}>\n                  <Translate contentKey=\"userManagement.email\">Email</Translate>\n                  <FaSort />\n                </th>\n                <th />\n                <th className=\"hand\" onClick={this.sort('langKey')}>\n                  <Translate contentKey=\"userManagement.langKey\">Lang Key</Translate>\n                  <FaSort />\n                </th>\n                <th>\n                  <Translate contentKey=\"userManagement.profiles\">Profiles</Translate>\n                </th>\n                <th className=\"hand\" onClick={this.sort('createdDate')}>\n                  <Translate contentKey=\"userManagement.createdDate\">Created Date</Translate>\n                  <FaSort />\n                </th>\n                <th className=\"hand\" onClick={this.sort('lastModifiedBy')}>\n                  <Translate contentKey=\"userManagement.lastModifiedBy\">Last Modified By</Translate>\n                  <FaSort />\n                </th>\n                <th className=\"hand\" onClick={this.sort('lastModifiedDate')}>\n                  <Translate contentKey=\"userManagement.lastModifiedDate\">Last Modified Date</Translate>\n                  <FaSort />\n                </th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((user, i) => (\n                <tr key={`user-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${user.login}`} color=\"link\" size=\"sm\">\n                      {user.id}\n                    </Button>\n                  </td>\n                  <td>{user.login}</td>\n                  <td>{user.email}</td>\n                  <td>\n                    {user.activated ? (\n                      <Button color=\"success\" onClick={this.toggleActive(user)}>\n                        Activated\n                      </Button>\n                    ) : (\n                      <Button color=\"danger\" onClick={this.toggleActive(user)}>\n                        Deactivated\n                      </Button>\n                    )}\n                  </td>\n                  <td>{user.langKey}</td>\n                  <td>\n                    {user.authorities\n                      ? user.authorities.map((authority, j) => (\n                          <div key={`user-auth-${i}-${j}`}>\n                            <span className=\"badge badge-info\">{authority}</span>\n                          </div>\n                        ))\n                      : null}\n                  </td>\n                  <td>\n                    <TextFormat value={user.createdDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\n                  </td>\n                  <td>{user.lastModifiedBy}</td>\n                  <td>\n                    <TextFormat value={user.lastModifiedDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\n                  </td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${user.login}`} color=\"info\" size=\"sm\">\n                        <FaEye />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${user.login}/edit`} color=\"primary\" size=\"sm\">\n                        <FaPencil />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                        </span>\n                      </Button>\n                      <Button\n                        tag={Link}\n                        to={`${match.url}/${user.login}/delete`}\n                        color=\"danger\"\n                        size=\"sm\"\n                        disabled={account.login === user.login}\n                      >\n                        <FaTrash />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                        </span>\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"row justify-content-center\">\n          <JhiPagination\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\n            activePage={this.state.activePage}\n            onSelect={this.handlePagination}\n            maxButtons={5}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = storeState => ({\n  users: storeState.userManagement.users,\n  totalItems: storeState.userManagement.totalItems,\n  account: storeState.authentication.account\n});\n\nconst mapDispatchToProps = { getUsers, updateUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagement);\n"]}]}