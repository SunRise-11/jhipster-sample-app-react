{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management-detail.tsx","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management-detail.tsx","mtime":1522786297660},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar react_redux_1 = require(\"react-redux\");\nvar react_router_dom_1 = require(\"react-router-dom\");\nvar reactstrap_1 = require(\"reactstrap\");\nvar react_jhipster_1 = require(\"react-jhipster\");\nvar fa_1 = require(\"react-icons/lib/fa\");\nvar constants_1 = require(\"app/config/constants\");\nvar user_management_reducer_1 = require(\"./user-management.reducer\");\nvar UserManagementDetail = /** @class */ (function (_super) {\n    tslib_1.__extends(UserManagementDetail, _super);\n    function UserManagementDetail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UserManagementDetail.prototype.componentDidMount = function () {\n        this.props.getUser(this.props.match.params.login);\n    };\n    UserManagementDetail.prototype.render = function () {\n        var user = this.props.user;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", null,\n                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.detail.title\" }, \"User\"),\n                \" [\",\n                React.createElement(\"b\", null, user.login),\n                \"]\"),\n            React.createElement(\"dl\", { className: \"row-md jh-entity-details\" },\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.login\" }, \"Login\")),\n                React.createElement(\"dd\", null,\n                    React.createElement(\"span\", null, user.login),\n                    \"\\u00A0\",\n                    user.activated ? (React.createElement(\"span\", { className: \"badge badge-success\" },\n                        React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.activated\" }, \"Activated\"))) : (React.createElement(\"span\", { className: \"badge badge-danger\" },\n                        React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.deactivated\" }, \"Deactivated\")))),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.firstName\" }, \"First Name\")),\n                React.createElement(\"dd\", null, user.firstName),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.lastName\" }, \"Last Name\")),\n                React.createElement(\"dd\", null, user.lastName),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.email\" }, \"Email\")),\n                React.createElement(\"dd\", null, user.email),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.langKey\" }, \"Lang Key\")),\n                React.createElement(\"dd\", null, user.langKey),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.createdBy\" }, \"Created By\")),\n                React.createElement(\"dd\", null, user.createdBy),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.createdDate\" }, \"Created Date\")),\n                React.createElement(\"dd\", null,\n                    React.createElement(react_jhipster_1.TextFormat, { value: user.createdDate, type: \"date\", format: constants_1.APP_DATE_FORMAT, blankOnInvalid: true })),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.lastModifiedBy\" }, \"Last Modified By\")),\n                React.createElement(\"dd\", null, user.lastModifiedBy),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.lastModifiedDate\" }, \"Last Modified Date\")),\n                React.createElement(\"dd\", null,\n                    React.createElement(react_jhipster_1.TextFormat, { value: user.lastModifiedDate, type: \"date\", format: constants_1.APP_DATE_FORMAT, blankOnInvalid: true })),\n                React.createElement(\"dt\", null,\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.profiles\" }, \"Profiles\")),\n                React.createElement(\"dd\", null,\n                    React.createElement(\"ul\", { className: \"list-unstyled\" }, user.authorities\n                        ? user.authorities.map(function (authority, i) { return (React.createElement(\"li\", { key: \"user-auth-\" + i },\n                            React.createElement(\"span\", { className: \"badge badge-info\" }, authority))); })\n                        : null))),\n            React.createElement(reactstrap_1.Button, { tag: react_router_dom_1.Link, to: \"/admin/user-management\", replace: true, color: \"info\" },\n                React.createElement(fa_1.FaArrowLeft, null),\n                ' ',\n                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"entity.action.back\" }, \"Back\")))));\n    };\n    return UserManagementDetail;\n}(React.Component));\nexports.UserManagementDetail = UserManagementDetail;\nvar mapStateToProps = function (storeState) { return ({\n    user: storeState.userManagement.user\n}); };\nvar mapDispatchToProps = { getUser: user_management_reducer_1.getUser };\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(UserManagementDetail);\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management-detail.tsx","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\nimport { FaArrowLeft } from 'react-icons/lib/fa';\n\nimport { APP_DATE_FORMAT } from 'app/config/constants';\nimport { IUser } from 'app/shared/model/user.model';\nimport { getUser } from './user-management.reducer';\n\nexport interface IUserManagementDetailProps {\n  getUser: ICrudGetAction<IUser>;\n  user: IUser;\n  match: any;\n}\n\nexport class UserManagementDetail extends React.Component<IUserManagementDetailProps> {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  render() {\n    const { user } = this.props;\n    return (\n      <div>\n        <h2>\n          <Translate contentKey=\"userManagement.detail.title\">User</Translate> [<b>{user.login}</b>]\n        </h2>\n        <dl className=\"row-md jh-entity-details\">\n          <dt>\n            <Translate contentKey=\"userManagement.login\">Login</Translate>\n          </dt>\n          <dd>\n            <span>{user.login}</span>&nbsp;\n            {user.activated ? (\n              <span className=\"badge badge-success\">\n                <Translate contentKey=\"userManagement.activated\">Activated</Translate>\n              </span>\n            ) : (\n              <span className=\"badge badge-danger\">\n                <Translate contentKey=\"userManagement.deactivated\">Deactivated</Translate>\n              </span>\n            )}\n          </dd>\n          <dt>\n            <Translate contentKey=\"userManagement.firstName\">First Name</Translate>\n          </dt>\n          <dd>{user.firstName}</dd>\n          <dt>\n            <Translate contentKey=\"userManagement.lastName\">Last Name</Translate>\n          </dt>\n          <dd>{user.lastName}</dd>\n          <dt>\n            <Translate contentKey=\"userManagement.email\">Email</Translate>\n          </dt>\n          <dd>{user.email}</dd>\n          <dt>\n            <Translate contentKey=\"userManagement.langKey\">Lang Key</Translate>\n          </dt>\n          <dd>{user.langKey}</dd>\n          <dt>\n            <Translate contentKey=\"userManagement.createdBy\">Created By</Translate>\n          </dt>\n          <dd>{user.createdBy}</dd>\n          <dt>\n            <Translate contentKey=\"userManagement.createdDate\">Created Date</Translate>\n          </dt>\n          <dd>\n            <TextFormat value={user.createdDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\n          </dd>\n          <dt>\n            <Translate contentKey=\"userManagement.lastModifiedBy\">Last Modified By</Translate>\n          </dt>\n          <dd>{user.lastModifiedBy}</dd>\n          <dt>\n            <Translate contentKey=\"userManagement.lastModifiedDate\">Last Modified Date</Translate>\n          </dt>\n          <dd>\n            <TextFormat value={user.lastModifiedDate} type=\"date\" format={APP_DATE_FORMAT} blankOnInvalid />\n          </dd>\n          <dt>\n            <Translate contentKey=\"userManagement.profiles\">Profiles</Translate>\n          </dt>\n          <dd>\n            <ul className=\"list-unstyled\">\n              {user.authorities\n                ? user.authorities.map((authority, i) => (\n                    <li key={`user-auth-${i}`}>\n                      <span className=\"badge badge-info\">{authority}</span>\n                    </li>\n                  ))\n                : null}\n            </ul>\n          </dd>\n        </dl>\n        <Button tag={Link} to=\"/admin/user-management\" replace color=\"info\">\n          <FaArrowLeft />{' '}\n          <span className=\"d-none d-md-inline\">\n            <Translate contentKey=\"entity.action.back\">Back</Translate>\n          </span>\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = storeState => ({\n  user: storeState.userManagement.user\n});\n\nconst mapDispatchToProps = { getUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementDetail);\n"]}]}