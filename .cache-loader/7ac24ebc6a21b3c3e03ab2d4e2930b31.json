{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/audits/audits.tsx","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/audits/audits.tsx","mtime":1522786297273},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar react_redux_1 = require(\"react-redux\");\nvar reactstrap_1 = require(\"reactstrap\");\nvar react_jhipster_1 = require(\"react-jhipster\");\nvar fa_1 = require(\"react-icons/lib/fa\");\nvar constants_1 = require(\"app/config/constants\");\nvar pagination_constants_1 = require(\"app/shared/util/pagination.constants\");\nvar administration_reducer_1 = require(\"../administration.reducer\");\nvar previousMonth = function () {\n    var now = new Date();\n    var fromDate = now.getMonth() === 0\n        ? new Date(now.getFullYear() - 1, 11, now.getDate())\n        : new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n    return fromDate.toISOString().slice(0, 10);\n};\nvar today = function () {\n    // Today + 1 day - needed if the current day must be included\n    var day = new Date();\n    day.setDate(day.getDate() + 1);\n    var toDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\n    return toDate.toISOString().slice(0, 10);\n};\nvar AuditsPage = /** @class */ (function (_super) {\n    tslib_1.__extends(AuditsPage, _super);\n    function AuditsPage() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = tslib_1.__assign({}, react_jhipster_1.getSortState(_this.props.location, pagination_constants_1.ITEMS_PER_PAGE), { fromDate: previousMonth(), toDate: today() });\n        _this.onChangeFromDate = function (evt) {\n            _this.setState({\n                fromDate: evt.target.value\n            }, function () { return _this.getAudits(); });\n        };\n        _this.onChangeToDate = function (evt) {\n            _this.setState({\n                toDate: evt.target.value\n            }, function () { return _this.getAudits(); });\n        };\n        _this.sort = function (prop) { return function () {\n            _this.setState({\n                order: _this.state.order === 'asc' ? 'desc' : 'asc',\n                sort: prop\n            }, function () { return _this.transition(); });\n        }; };\n        _this.transition = function () {\n            _this.getAudits();\n            _this.props.history.push(_this.props.location.pathname + \"?page=\" + _this.state.activePage + \"&sort=\" + _this.state.sort + \",\" + _this.state.order);\n        };\n        _this.handlePagination = function (activePage) { return _this.setState({ activePage: activePage }, function () { return _this.transition(); }); };\n        _this.getAudits = function () {\n            var _a = _this.state, activePage = _a.activePage, itemsPerPage = _a.itemsPerPage, sort = _a.sort, order = _a.order, fromDate = _a.fromDate, toDate = _a.toDate;\n            _this.props.getAudits(activePage - 1, itemsPerPage, sort + \",\" + order, fromDate, toDate);\n        };\n        return _this;\n    }\n    AuditsPage.prototype.componentDidMount = function () {\n        this.getAudits();\n    };\n    AuditsPage.prototype.render = function () {\n        var _a = this.props, audits = _a.audits, totalItems = _a.totalItems;\n        var _b = this.state, fromDate = _b.fromDate, toDate = _b.toDate;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", null, \"Audits\"),\n            React.createElement(\"span\", null,\n                React.createElement(react_jhipster_1.Translate, { contentKey: \"audits.filter.from\" }, \"from\")),\n            React.createElement(reactstrap_1.Input, { type: \"date\", value: fromDate, onChange: this.onChangeFromDate, name: \"fromDate\", id: \"fromDate\" }),\n            React.createElement(\"span\", null,\n                React.createElement(react_jhipster_1.Translate, { contentKey: \"audits.filter.to\" }, \"to\")),\n            React.createElement(reactstrap_1.Input, { type: \"date\", value: toDate, onChange: this.onChangeToDate, name: \"toDate\", id: \"toDate\" }),\n            React.createElement(\"div\", { className: \"table-responsive\" },\n                React.createElement(\"table\", { className: \"table table-striped\" },\n                    React.createElement(\"thead\", null,\n                        React.createElement(\"tr\", null,\n                            React.createElement(\"th\", { onClick: this.sort('auditEventDate') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"audits.table.header.date\" }, \"Date\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", { onClick: this.sort('principal') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"audits.table.header.principal\" }, \"User\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", { onClick: this.sort('auditEventType') },\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"audits.table.header.status\" }, \"State\"),\n                                React.createElement(fa_1.FaSort, null)),\n                            React.createElement(\"th\", null,\n                                React.createElement(react_jhipster_1.Translate, { contentKey: \"audits.table.header.data\" }, \"Extra data\")))),\n                    React.createElement(\"tbody\", null, audits.map(function (audit, i) { return (React.createElement(\"tr\", { key: \"audit-\" + i },\n                        React.createElement(\"td\", null, React.createElement(react_jhipster_1.TextFormat, { value: audit.timestamp, type: \"date\", format: constants_1.APP_TIMESTAMP_FORMAT })),\n                        React.createElement(\"td\", null, audit.principal),\n                        React.createElement(\"td\", null, audit.type),\n                        React.createElement(\"td\", null,\n                            audit.data ? audit.data.message : null,\n                            audit.data ? audit.data.remoteAddress : null))); })))),\n            React.createElement(\"div\", { className: \"row justify-content-center\" },\n                React.createElement(react_jhipster_1.JhiPagination, { items: react_jhipster_1.getPaginationItemsNumber(totalItems, this.state.itemsPerPage), activePage: this.state.activePage, onSelect: this.handlePagination, maxButtons: 5 }))));\n    };\n    return AuditsPage;\n}(React.Component));\nexports.AuditsPage = AuditsPage;\nvar mapStateToProps = function (storeState) { return ({\n    audits: storeState.administration.audits,\n    totalItems: storeState.administration.totalItems\n}); };\nvar mapDispatchToProps = { getAudits: administration_reducer_1.getAudits };\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(AuditsPage);\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/audits/audits.tsx","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/audits/audits.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from 'reactstrap';\nimport { Translate, TextFormat, JhiPagination, getPaginationItemsNumber, getSortState, IPaginationBaseState } from 'react-jhipster';\nimport { FaSort } from 'react-icons/lib/fa';\n\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\nimport { getAudits } from '../administration.reducer';\n\nexport interface IAuditsPageProps {\n  isFetching?: boolean;\n  audits: any[];\n  getAudits: Function;\n  totalItems: 0;\n  history: any;\n  location: any;\n  onChangeFromDate: any;\n  onChangeToDate: any;\n}\n\nexport interface IAuditsPageState extends IPaginationBaseState {\n  fromDate: string;\n  toDate: string;\n}\n\nconst previousMonth = (): string => {\n  const now: Date = new Date();\n  const fromDate =\n    now.getMonth() === 0\n      ? new Date(now.getFullYear() - 1, 11, now.getDate())\n      : new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n  return fromDate.toISOString().slice(0, 10);\n};\n\nconst today = (): string => {\n  // Today + 1 day - needed if the current day must be included\n  const day: Date = new Date();\n  day.setDate(day.getDate() + 1);\n  const toDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\n  return toDate.toISOString().slice(0, 10);\n};\n\nexport class AuditsPage extends React.Component<IAuditsPageProps, IAuditsPageState> {\n  state: IAuditsPageState = {\n    ...getSortState(this.props.location, ITEMS_PER_PAGE),\n    fromDate: previousMonth(),\n    toDate: today()\n  };\n\n  componentDidMount() {\n    this.getAudits();\n  }\n\n  onChangeFromDate = evt => {\n    this.setState(\n      {\n        fromDate: evt.target.value\n      },\n      () => this.getAudits()\n    );\n  };\n  onChangeToDate = evt => {\n    this.setState(\n      {\n        toDate: evt.target.value\n      },\n      () => this.getAudits()\n    );\n  };\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => this.transition()\n    );\n  };\n\n  transition = () => {\n    this.getAudits();\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\n  };\n\n  handlePagination = activePage => this.setState({ activePage }, () => this.transition());\n\n  getAudits = () => {\n    const { activePage, itemsPerPage, sort, order, fromDate, toDate } = this.state;\n    this.props.getAudits(activePage - 1, itemsPerPage, `${sort},${order}`, fromDate, toDate);\n  };\n\n  render() {\n    const { audits, totalItems } = this.props;\n    const { fromDate, toDate } = this.state;\n    return (\n      <div>\n        <h2>Audits</h2>\n        <span>\n          <Translate contentKey=\"audits.filter.from\">from</Translate>\n        </span>\n        <Input type=\"date\" value={fromDate} onChange={this.onChangeFromDate} name=\"fromDate\" id=\"fromDate\" />\n        <span>\n          <Translate contentKey=\"audits.filter.to\">to</Translate>\n        </span>\n        <Input type=\"date\" value={toDate} onChange={this.onChangeToDate} name=\"toDate\" id=\"toDate\" />\n        <div className=\"table-responsive\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th onClick={this.sort('auditEventDate')}>\n                  <Translate contentKey=\"audits.table.header.date\">Date</Translate>\n                  <FaSort />\n                </th>\n                <th onClick={this.sort('principal')}>\n                  <Translate contentKey=\"audits.table.header.principal\">User</Translate>\n                  <FaSort />\n                </th>\n                <th onClick={this.sort('auditEventType')}>\n                  <Translate contentKey=\"audits.table.header.status\">State</Translate>\n                  <FaSort />\n                </th>\n                <th>\n                  <Translate contentKey=\"audits.table.header.data\">Extra data</Translate>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {audits.map((audit, i) => (\n                <tr key={`audit-${i}`}>\n                  <td>{<TextFormat value={audit.timestamp} type=\"date\" format={APP_TIMESTAMP_FORMAT} />}</td>\n                  <td>{audit.principal}</td>\n                  <td>{audit.type}</td>\n                  <td>\n                    {audit.data ? audit.data.message : null}\n                    {audit.data ? audit.data.remoteAddress : null}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"row justify-content-center\">\n          <JhiPagination\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\n            activePage={this.state.activePage}\n            onSelect={this.handlePagination}\n            maxButtons={5}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = storeState => ({\n  audits: storeState.administration.audits,\n  totalItems: storeState.administration.totalItems\n});\n\nconst mapDispatchToProps = { getAudits };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuditsPage);\n"]}]}