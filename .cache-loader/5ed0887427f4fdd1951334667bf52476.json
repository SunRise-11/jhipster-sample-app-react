{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management-delete-dialog.tsx","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management-delete-dialog.tsx","mtime":1522786297687},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar react_redux_1 = require(\"react-redux\");\nvar reactstrap_1 = require(\"reactstrap\");\nvar react_jhipster_1 = require(\"react-jhipster\");\nvar fa_1 = require(\"react-icons/lib/fa\");\nvar user_management_reducer_1 = require(\"./user-management.reducer\");\nvar UserManagementDeleteDialog = /** @class */ (function (_super) {\n    tslib_1.__extends(UserManagementDeleteDialog, _super);\n    function UserManagementDeleteDialog() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.confirmDelete = function (event) {\n            _this.props.deleteUser(_this.props.user.login);\n            _this.handleClose(event);\n        };\n        _this.handleClose = function (event) {\n            event.stopPropagation();\n            _this.props.history.goBack();\n        };\n        return _this;\n    }\n    UserManagementDeleteDialog.prototype.componentDidMount = function () {\n        this.props.getUser(this.props.match.params.login);\n    };\n    UserManagementDeleteDialog.prototype.render = function () {\n        var user = this.props.user;\n        return (React.createElement(reactstrap_1.Modal, { isOpen: true, toggle: this.handleClose },\n            React.createElement(reactstrap_1.ModalHeader, { toggle: this.handleClose },\n                React.createElement(react_jhipster_1.Translate, { contentKey: \"entity.delete.title\" }, \"Confirm delete operation\")),\n            React.createElement(reactstrap_1.ModalBody, null,\n                React.createElement(react_jhipster_1.Translate, { contentKey: \"userManagement.delete.question\", interpolate: { login: user.login } }, \"Are you sure you want to delete this User?\")),\n            React.createElement(reactstrap_1.ModalFooter, null,\n                React.createElement(reactstrap_1.Button, { color: \"secondary\", onClick: this.handleClose },\n                    React.createElement(fa_1.FaBan, null),\n                    \"\\u00A0\",\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"entity.action.cancel\" }, \"Cancel\")),\n                React.createElement(reactstrap_1.Button, { color: \"danger\", onClick: this.confirmDelete },\n                    React.createElement(fa_1.FaTrash, null),\n                    \"\\u00A0\",\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"entity.action.delete\" }, \"Delete\")))));\n    };\n    return UserManagementDeleteDialog;\n}(React.Component));\nexports.UserManagementDeleteDialog = UserManagementDeleteDialog;\nvar mapStateToProps = function (storeState) { return ({\n    user: storeState.userManagement.user\n}); };\nvar mapDispatchToProps = { getUser: user_management_reducer_1.getUser, deleteUser: user_management_reducer_1.deleteUser };\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(UserManagementDeleteDialog);\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management-delete-dialog.tsx","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/user-management/user-management-delete-dialog.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,2CAAsC;AACtC,yCAAgF;AAChF,iDAA8E;AAC9E,yCAAoD;AAGpD,qEAAgE;AAUhE;IAAgD,sDAAiD;IAAjG;QAAA,qEAwCC;QAnCC,mBAAa,GAAG,UAAA,KAAK;YACnB,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7C,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,iBAAW,GAAG,UAAA,KAAK;YACjB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9B,CAAC,CAAC;;IA2BJ,CAAC;IAvCC,sDAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAYD,2CAAM,GAAN;QACU,IAAA,sBAAI,CAAgB;QAC5B,OAAO,CACL,oBAAC,kBAAK,IAAC,MAAM,QAAC,MAAM,EAAE,IAAI,CAAC,WAAW;YACpC,oBAAC,wBAAW,IAAC,MAAM,EAAE,IAAI,CAAC,WAAW;gBACnC,oBAAC,0BAAS,IAAC,UAAU,EAAC,qBAAqB,+BAAqC,CACpE;YACd,oBAAC,sBAAS;gBACR,oBAAC,0BAAS,IAAC,UAAU,EAAC,gCAAgC,EAAC,WAAW,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,iDAE7E,CACF;YACZ,oBAAC,wBAAW;gBACV,oBAAC,mBAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW;oBACjD,oBAAC,UAAK,OAAG;;oBACT,oBAAC,0BAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD;gBACT,oBAAC,mBAAM,IAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa;oBAChD,oBAAC,YAAO,OAAG;;oBACX,oBAAC,0BAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD,CACG,CACR,CACT,CAAC;IACJ,CAAC;IACH,iCAAC;AAAD,CAAC,AAxCD,CAAgD,KAAK,CAAC,SAAS,GAwC9D;AAxCY,gEAA0B;AA0CvC,IAAM,eAAe,GAAG,UAAA,UAAU,IAAI,OAAA,CAAC;IACrC,IAAI,EAAE,UAAU,CAAC,cAAc,CAAC,IAAI;CACrC,CAAC,EAFoC,CAEpC,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,OAAO,mCAAA,EAAE,UAAU,sCAAA,EAAE,CAAC;AAEnD,kBAAe,qBAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,0BAA0B,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FaBan, FaTrash } from 'react-icons/lib/fa';\n\nimport { IUser } from 'app/shared/model/user.model';\nimport { getUser, deleteUser } from './user-management.reducer';\n\nexport interface IUserManagementDeleteDialogProps {\n  getUser: ICrudGetAction<IUser>;\n  deleteUser: ICrudDeleteAction<IUser>;\n  user: IUser;\n  match: any;\n  history: any;\n}\n\nexport class UserManagementDeleteDialog extends React.Component<IUserManagementDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteUser(this.props.user.login);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody>\n          <Translate contentKey=\"userManagement.delete.question\" interpolate={{ login: user.login }}>\n            Are you sure you want to delete this User?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FaBan />&nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button color=\"danger\" onClick={this.confirmDelete}>\n            <FaTrash />&nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = storeState => ({\n  user: storeState.userManagement.user\n});\n\nconst mapDispatchToProps = { getUser, deleteUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagementDeleteDialog);\n"]}]}