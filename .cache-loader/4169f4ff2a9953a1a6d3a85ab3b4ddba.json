{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/login/login.tsx","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/login/login.tsx","mtime":1522786296974},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar react_redux_1 = require(\"react-redux\");\nvar react_router_dom_1 = require(\"react-router-dom\");\nvar authentication_1 = require(\"app/shared/reducers/authentication\");\nvar login_modal_1 = require(\"./login-modal\");\nvar Login = /** @class */ (function (_super) {\n    tslib_1.__extends(Login, _super);\n    function Login() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            showModal: _this.props.showModal,\n            redirectToReferrer: _this.props.isAuthenticated\n        };\n        _this.handleLogin = function (username, password, rememberMe) {\n            if (rememberMe === void 0) { rememberMe = false; }\n            _this.props.login(username, password, rememberMe);\n        };\n        _this.handleClose = function () {\n            _this.setState({ showModal: false });\n        };\n        return _this;\n    }\n    Login.prototype.componentWillReceiveProps = function (nextProps) {\n        this.setState({\n            showModal: nextProps.showModal,\n            redirectToReferrer: nextProps.isAuthenticated\n        });\n    };\n    Login.prototype.render = function () {\n        var from = (this.props.location.state || { from: { pathname: '/', search: this.props.location.search } }).from;\n        var _a = this.state, showModal = _a.showModal, redirectToReferrer = _a.redirectToReferrer;\n        if (redirectToReferrer) {\n            return React.createElement(react_router_dom_1.Redirect, { to: from });\n        }\n        return (React.createElement(login_modal_1.default, { showModal: showModal, handleLogin: this.handleLogin, handleClose: this.handleClose, loginError: this.props.loginError }));\n    };\n    return Login;\n}(React.Component));\nexports.Login = Login;\nvar mapStateToProps = function (_a) {\n    var authentication = _a.authentication;\n    return ({\n        isAuthenticated: authentication.isAuthenticated,\n        loginError: authentication.loginError,\n        showModal: authentication.showModalLogin\n    });\n};\nvar mapDispatchToProps = { login: authentication_1.login };\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Login);\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/login/login.tsx","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/login/login.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,2CAAsC;AACtC,qDAA4C;AAE5C,qEAA2D;AAC3D,6CAAuC;AAevC;IAA2B,iCAAyC;IAApE;QAAA,qEA+BC;QA9BC,WAAK,GAAgB;YACnB,SAAS,EAAE,KAAI,CAAC,KAAK,CAAC,SAAS;YAC/B,kBAAkB,EAAE,KAAI,CAAC,KAAK,CAAC,eAAe;SAC/C,CAAC;QASF,iBAAW,GAAG,UAAC,QAAQ,EAAE,QAAQ,EAAE,UAAkB;YAAlB,2BAAA,EAAA,kBAAkB;YACnD,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QACnD,CAAC,CAAC;QAEF,iBAAW,GAAG;YACZ,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;;IAYJ,CAAC;IAzBC,yCAAyB,GAAzB,UAA0B,SAAsB;QAC9C,IAAI,CAAC,QAAQ,CAAC;YACZ,SAAS,EAAE,SAAS,CAAC,SAAS;YAC9B,kBAAkB,EAAE,SAAS,CAAC,eAAe;SAC9C,CAAC,CAAC;IACL,CAAC;IAUD,sBAAM,GAAN;QACU,IAAA,0GAAI,CAAkG;QACxG,IAAA,eAA8C,EAA5C,wBAAS,EAAE,0CAAkB,CAAgB;QACrD,IAAI,kBAAkB,EAAE;YACtB,OAAO,oBAAC,2BAAQ,IAAC,EAAE,EAAE,IAAI,GAAI,CAAC;SAC/B;QACD,OAAO,CACL,oBAAC,qBAAU,IAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GAAI,CACtI,CAAC;IACJ,CAAC;IACH,YAAC;AAAD,CAAC,AA/BD,CAA2B,KAAK,CAAC,SAAS,GA+BzC;AA/BY,sBAAK;AAiClB,IAAM,eAAe,GAAG,UAAC,EAAkB;QAAhB,kCAAc;IAAO,OAAA,CAAC;QAC/C,eAAe,EAAE,cAAc,CAAC,eAAe;QAC/C,UAAU,EAAE,cAAc,CAAC,UAAU;QACrC,SAAS,EAAE,cAAc,CAAC,cAAc;KACzC,CAAC;AAJ8C,CAI9C,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,KAAK,wBAAA,EAAE,CAAC;AAErC,kBAAe,qBAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { login } from 'app/shared/reducers/authentication';\nimport LoginModal from './login-modal';\n\nexport interface ILoginProps {\n  isAuthenticated: boolean;\n  showModal: boolean;\n  loginError?: boolean;\n  location: any;\n  login: Function;\n}\n\nexport interface ILoginState {\n  showModal: boolean;\n  redirectToReferrer: boolean;\n}\n\nexport class Login extends React.Component<ILoginProps, ILoginState> {\n  state: ILoginState = {\n    showModal: this.props.showModal,\n    redirectToReferrer: this.props.isAuthenticated\n  };\n\n  componentWillReceiveProps(nextProps: ILoginProps) {\n    this.setState({\n      showModal: nextProps.showModal,\n      redirectToReferrer: nextProps.isAuthenticated\n    });\n  }\n\n  handleLogin = (username, password, rememberMe = false) => {\n    this.props.login(username, password, rememberMe);\n  };\n\n  handleClose = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: '/', search: this.props.location.search } };\n    const { showModal, redirectToReferrer } = this.state;\n    if (redirectToReferrer) {\n      return <Redirect to={from} />;\n    }\n    return (\n      <LoginModal showModal={showModal} handleLogin={this.handleLogin} handleClose={this.handleClose} loginError={this.props.loginError} />\n    );\n  }\n}\n\nconst mapStateToProps = ({ authentication }) => ({\n  isAuthenticated: authentication.isAuthenticated,\n  loginError: authentication.loginError,\n  showModal: authentication.showModalLogin\n});\n\nconst mapDispatchToProps = { login };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]}]}