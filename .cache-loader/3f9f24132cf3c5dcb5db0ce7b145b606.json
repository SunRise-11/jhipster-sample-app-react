{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/shared/layout/header/header.tsx","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/shared/layout/header/header.tsx","mtime":1522786297746},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nrequire(\"./header.css\");\nvar React = require(\"react\");\nvar react_jhipster_1 = require(\"react-jhipster\");\nvar reactstrap_1 = require(\"reactstrap\");\nvar fa_1 = require(\"react-icons/lib/fa\");\nvar react_router_dom_1 = require(\"react-router-dom\");\nvar react_redux_loading_bar_1 = require(\"react-redux-loading-bar\");\nvar translation_1 = require(\"app/config/translation\");\nvar constants_1 = require(\"app/config/constants\");\nvar BrandIcon = function (props) { return (React.createElement(\"div\", tslib_1.__assign({}, props, { className: \"brand-icon\" }),\n    React.createElement(\"img\", { src: \"static/images/logo-jhipster-react.svg\", alt: \"Logo\" }))); };\nvar Header = /** @class */ (function (_super) {\n    tslib_1.__extends(Header, _super);\n    function Header() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            menuOpen: false\n        };\n        _this.handleLocaleChange = function (event) {\n            _this.props.onLocaleChange(event.target.value);\n        };\n        _this.renderDevRibbon = function () {\n            return process.env.NODE_ENV === 'development' ? (React.createElement(\"div\", { className: \"ribbon dev\" },\n                React.createElement(\"a\", { href: \"\" },\n                    React.createElement(react_jhipster_1.Translate, { contentKey: \"global.ribbon.dev\" }, \"Development\")))) : null;\n        };\n        _this.toggleMenu = function () {\n            _this.setState({ menuOpen: !_this.state.menuOpen });\n        };\n        return _this;\n    }\n    Header.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, currentLocale = _a.currentLocale, isAuthenticated = _a.isAuthenticated, isAdmin = _a.isAdmin;\n        var entityMenuItems = [\n            /* jhipster-needle-add-entity-to-menu - - JHipster will add entities to the menu here */\n            React.createElement(\"span\", { key: \"dummy-placeholder\" }) /* workaround to avoid error when there are no entities */\n        ];\n        /* jhipster-needle-add-element-to-menu - JHipster will add entities to the menu here */\n        var adminMenuItems = [\n            React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"user-management\", to: \"/admin/user-management\" },\n                React.createElement(fa_1.FaUser, null),\n                \" User Management\"),\n            React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"metrics\", to: \"/admin/metrics\" },\n                React.createElement(fa_1.FaDashboard, null),\n                \" Metrics\"),\n            React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"health\", to: \"/admin/health\" },\n                React.createElement(fa_1.FaHeart, null),\n                \" Health\"),\n            React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"configuration\", to: \"/admin/configuration\" },\n                React.createElement(fa_1.FaList, null),\n                \" Configuration\"),\n            React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"audits\", to: \"/admin/audits\" },\n                React.createElement(fa_1.FaBell, null),\n                \" Audits\"),\n            React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"logs\", to: \"/admin/logs\" },\n                React.createElement(fa_1.FaTasks, null),\n                \" Logs\"),\n            /* jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here */\n            React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"docs\", to: \"/admin/docs\" },\n                React.createElement(fa_1.FaBook, null),\n                \" API Docs\"),\n            React.createElement(reactstrap_1.DropdownItem, { tag: \"a\", key: \"h2-console\", href: \"./h2-console\", target: \"_tab\" },\n                React.createElement(fa_1.FaHddO, null),\n                \" Database\")\n        ];\n        var accountMenuItems = [];\n        if (isAuthenticated) {\n            accountMenuItems.push(React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"settings\", to: \"/account/settings\" },\n                React.createElement(fa_1.FaWrench, null),\n                \" Settings\"), React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"password\", to: \"/account/password\" },\n                React.createElement(fa_1.FaClockO, null),\n                \" Password\"), React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"logout\", to: \"/logout\" },\n                React.createElement(fa_1.FaSignOut, null),\n                \" Logout\"));\n        }\n        else {\n            accountMenuItems.push(React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"login\", to: \"/login\" },\n                React.createElement(fa_1.FaSignIn, null),\n                \" Login\"), React.createElement(reactstrap_1.DropdownItem, { tag: react_router_dom_1.NavLink, key: \"register\", to: \"/register\" },\n                React.createElement(fa_1.FaSignIn, null),\n                \" Register\"));\n        }\n        var entitiesMenu = (React.createElement(reactstrap_1.UncontrolledDropdown, { nav: true, inNavbar: true, key: \"entities\" },\n            React.createElement(reactstrap_1.DropdownToggle, { nav: true, caret: true, className: \"d-flex align-items-center\" },\n                React.createElement(fa_1.FaThList, null),\n                React.createElement(\"span\", null, \"Entities\")),\n            React.createElement(reactstrap_1.DropdownMenu, { right: true }, entityMenuItems)));\n        var adminMenu = (React.createElement(reactstrap_1.UncontrolledDropdown, { nav: true, inNavbar: true, key: \"admin\" },\n            React.createElement(reactstrap_1.DropdownToggle, { nav: true, caret: true, className: \"d-flex align-items-center\" },\n                React.createElement(fa_1.FaUserPlus, null),\n                React.createElement(\"span\", null, \"Administration\")),\n            React.createElement(reactstrap_1.DropdownMenu, { right: true, style: { width: '130%' } }, adminMenuItems)));\n        return (React.createElement(\"div\", { id: \"app-header\" },\n            this.renderDevRibbon(),\n            React.createElement(react_redux_loading_bar_1.default, { className: \"loading-bar\" }),\n            React.createElement(reactstrap_1.Navbar, { dark: true, expand: \"sm\", fixed: \"top\", className: \"jh-navbar\" },\n                React.createElement(reactstrap_1.NavbarToggler, { \"aria-label\": \"Menu\", onClick: this.toggleMenu }),\n                React.createElement(reactstrap_1.NavbarBrand, { tag: react_router_dom_1.NavLink, to: \"/\", className: \"brand-logo\" },\n                    React.createElement(BrandIcon, null),\n                    React.createElement(\"span\", { className: \"brand-title\" },\n                        React.createElement(react_jhipster_1.Translate, { contentKey: \"global.title\" }, \"JhipsterSampleApplicationReact\")),\n                    React.createElement(\"span\", { className: \"navbar-version\" }, constants_1.default.VERSION)),\n                React.createElement(reactstrap_1.Collapse, { isOpen: this.state.menuOpen, navbar: true },\n                    React.createElement(reactstrap_1.Nav, { className: \"ml-auto\", navbar: true },\n                        React.createElement(reactstrap_1.NavItem, null,\n                            React.createElement(reactstrap_1.NavLink, { tag: react_router_dom_1.NavLink, to: \"/\", className: \"d-flex align-items-center\" },\n                                React.createElement(fa_1.FaHome, null),\n                                React.createElement(\"span\", null, \"Home\"))),\n                        isAuthenticated ? (isAdmin ? [entitiesMenu, adminMenu] : entitiesMenu) : null,\n                        translation_1.locales.length > 1 ? (React.createElement(reactstrap_1.UncontrolledDropdown, { nav: true, inNavbar: true },\n                            React.createElement(reactstrap_1.DropdownToggle, { nav: true, caret: true, className: \"d-flex align-items-center\" },\n                                React.createElement(fa_1.FaFlag, null),\n                                React.createElement(\"span\", null, currentLocale.toUpperCase())),\n                            React.createElement(reactstrap_1.DropdownMenu, { right: true }, translation_1.locales.map(function (lang) { return (React.createElement(reactstrap_1.DropdownItem, { key: lang, value: lang, onClick: _this.handleLocaleChange }, lang.toUpperCase())); })))) : null,\n                        React.createElement(reactstrap_1.UncontrolledDropdown, { nav: true, inNavbar: true },\n                            React.createElement(reactstrap_1.DropdownToggle, { nav: true, caret: true, className: \"d-flex align-items-center\" },\n                                React.createElement(fa_1.FaUser, null),\n                                React.createElement(\"span\", null, \"Account\")),\n                            React.createElement(reactstrap_1.DropdownMenu, { right: true }, accountMenuItems)))))));\n    };\n    return Header;\n}(React.Component));\nexports.Header = Header;\nexports.default = Header;\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/shared/layout/header/header.tsx","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/shared/layout/header/header.tsx"],"names":[],"mappings":"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","sourcesContent":["import './header.css';\n\nimport * as React from 'react';\nimport { Translate } from 'react-jhipster';\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarToggler,\n  NavbarBrand,\n  Collapse,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport {\n  FaHome,\n  FaThList,\n  FaUserPlus,\n  FaUser,\n  FaFlag,\n  FaHeart,\n  FaList,\n  FaTasks,\n  FaDashboard,\n  FaBook,\n  FaWrench,\n  FaSignIn,\n  FaSignOut,\n  FaClockO,\n  FaHddO,\n  // tslint:disable-next-line\n  FaRoad,\n  // tslint:disable-next-line\n  FaEye,\n  // tslint:disable-next-line\n  FaAsterisk,\n  // tslint:disable-next-line\n  FaBell\n} from 'react-icons/lib/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport { locales } from 'app/config/translation';\nimport appConfig from 'app/config/constants';\n\nexport interface IHeaderProps {\n  isAuthenticated: boolean;\n  isAdmin: boolean;\n  currentLocale: string;\n  onLocaleChange: Function;\n}\n\nexport interface IHeaderState {\n  menuOpen: boolean;\n}\n\nconst BrandIcon = props => (\n  <div {...props} className=\"brand-icon\">\n    <img src=\"static/images/logo-jhipster-react.svg\" alt=\"Logo\" />\n  </div>\n);\nexport class Header extends React.Component<IHeaderProps, IHeaderState> {\n  state: IHeaderState = {\n    menuOpen: false\n  };\n\n  handleLocaleChange = event => {\n    this.props.onLocaleChange(event.target.value);\n  };\n\n  renderDevRibbon = () =>\n    process.env.NODE_ENV === 'development' ? (\n      <div className=\"ribbon dev\">\n        <a href=\"\">\n          <Translate contentKey=\"global.ribbon.dev\">Development</Translate>\n        </a>\n      </div>\n    ) : null;\n\n  toggleMenu = () => {\n    this.setState({ menuOpen: !this.state.menuOpen });\n  };\n\n  render() {\n    const { currentLocale, isAuthenticated, isAdmin } = this.props;\n    const entityMenuItems = [\n      /* jhipster-needle-add-entity-to-menu - - JHipster will add entities to the menu here */\n      <span key=\"dummy-placeholder\" /> /* workaround to avoid error when there are no entities */\n    ];\n    /* jhipster-needle-add-element-to-menu - JHipster will add entities to the menu here */\n    const adminMenuItems = [\n      <DropdownItem tag={Link} key=\"user-management\" to=\"/admin/user-management\">\n        <FaUser /> User Management\n      </DropdownItem>,\n      <DropdownItem tag={Link} key=\"metrics\" to=\"/admin/metrics\">\n        <FaDashboard /> Metrics\n      </DropdownItem>,\n      <DropdownItem tag={Link} key=\"health\" to=\"/admin/health\">\n        <FaHeart /> Health\n      </DropdownItem>,\n      <DropdownItem tag={Link} key=\"configuration\" to=\"/admin/configuration\">\n        <FaList /> Configuration\n      </DropdownItem>,\n      <DropdownItem tag={Link} key=\"audits\" to=\"/admin/audits\">\n        <FaBell /> Audits\n      </DropdownItem>,\n      <DropdownItem tag={Link} key=\"logs\" to=\"/admin/logs\">\n        <FaTasks /> Logs\n      </DropdownItem>,\n      /* jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here */\n      <DropdownItem tag={Link} key=\"docs\" to=\"/admin/docs\">\n        <FaBook /> API Docs\n      </DropdownItem>,\n      <DropdownItem tag=\"a\" key=\"h2-console\" href=\"./h2-console\" target=\"_tab\">\n        <FaHddO /> Database\n      </DropdownItem>\n    ];\n    const accountMenuItems = [];\n    if (isAuthenticated) {\n      accountMenuItems.push(\n        <DropdownItem tag={Link} key=\"settings\" to=\"/account/settings\">\n          <FaWrench /> Settings\n        </DropdownItem>,\n        <DropdownItem tag={Link} key=\"password\" to=\"/account/password\">\n          <FaClockO /> Password\n        </DropdownItem>,\n        <DropdownItem tag={Link} key=\"logout\" to=\"/logout\">\n          <FaSignOut /> Logout\n        </DropdownItem>\n      );\n    } else {\n      accountMenuItems.push(\n        <DropdownItem tag={Link} key=\"login\" to=\"/login\">\n          <FaSignIn /> Login\n        </DropdownItem>,\n        <DropdownItem tag={Link} key=\"register\" to=\"/register\">\n          <FaSignIn /> Register\n        </DropdownItem>\n      );\n    }\n\n    const entitiesMenu = (\n      <UncontrolledDropdown nav inNavbar key=\"entities\">\n        <DropdownToggle nav caret className=\"d-flex align-items-center\">\n          <FaThList />\n          <span>Entities</span>\n        </DropdownToggle>\n        <DropdownMenu right>{entityMenuItems}</DropdownMenu>\n      </UncontrolledDropdown>\n    );\n    const adminMenu = (\n      <UncontrolledDropdown nav inNavbar key=\"admin\">\n        <DropdownToggle nav caret className=\"d-flex align-items-center\">\n          <FaUserPlus />\n          <span>Administration</span>\n        </DropdownToggle>\n        <DropdownMenu right style={{ width: '130%' }}>\n          {adminMenuItems}\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    );\n\n    return (\n      <div id=\"app-header\">\n        {this.renderDevRibbon()}\n        <LoadingBar className=\"loading-bar\" />\n        <Navbar dark expand=\"sm\" fixed=\"top\" className=\"jh-navbar\">\n          <NavbarToggler aria-label=\"Menu\" onClick={this.toggleMenu} />\n          <NavbarBrand tag={Link} to=\"/\" className=\"brand-logo\">\n            <BrandIcon />\n            <span className=\"brand-title\">\n              <Translate contentKey=\"global.title\">JhipsterSampleApplicationReact</Translate>\n            </span>\n            <span className=\"navbar-version\">{appConfig.VERSION}</span>\n          </NavbarBrand>\n          <Collapse isOpen={this.state.menuOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink tag={Link} to=\"/\" className=\"d-flex align-items-center\">\n                  <FaHome />\n                  <span>Home</span>\n                </NavLink>\n              </NavItem>\n              {isAuthenticated ? (isAdmin ? [entitiesMenu, adminMenu] : entitiesMenu) : null}\n              {locales.length > 1 ? (\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret className=\"d-flex align-items-center\">\n                    <FaFlag />\n                    <span>{currentLocale.toUpperCase()}</span>\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    {locales.map(lang => (\n                      <DropdownItem key={lang} value={lang} onClick={this.handleLocaleChange}>\n                        {lang.toUpperCase()}\n                      </DropdownItem>\n                    ))}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              ) : null}\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret className=\"d-flex align-items-center\">\n                  <FaUser />\n                  <span>Account</span>\n                </DropdownToggle>\n                <DropdownMenu right>{accountMenuItems}</DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n"]}]}