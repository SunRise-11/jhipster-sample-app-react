{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/configuration/configuration.tsx","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/configuration/configuration.tsx","mtime":1522786297301},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = require(\"react\");\nvar react_redux_1 = require(\"react-redux\");\nvar reactstrap_1 = require(\"reactstrap\");\nvar react_jhipster_1 = require(\"react-jhipster\");\nvar administration_reducer_1 = require(\"../administration.reducer\");\nvar ConfigurationPage = /** @class */ (function (_super) {\n    tslib_1.__extends(ConfigurationPage, _super);\n    function ConfigurationPage() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            filter: '',\n            reversePrefix: false,\n            reverseProperties: false\n        };\n        _this.setFilter = function (evt) {\n            _this.setState({\n                filter: evt.target.value\n            });\n        };\n        _this.envFilterFn = function (configProp) { return configProp.toUpperCase().includes(_this.state.filter.toUpperCase()); };\n        _this.propsFilterFn = function (configProp) { return configProp.prefix.toUpperCase().includes(_this.state.filter.toUpperCase()); };\n        _this.reversePrefix = function () {\n            _this.setState({\n                reversePrefix: !_this.state.reversePrefix\n            });\n        };\n        _this.reverseProperties = function () {\n            _this.setState({\n                reverseProperties: !_this.state.reverseProperties\n            });\n        };\n        _this.getContextList = function (contexts) {\n            return Object.values(contexts)\n                .map(function (v) { return v.beans; })\n                .reduce(function (acc, e) { return (tslib_1.__assign({}, acc, e)); });\n        };\n        return _this;\n    }\n    ConfigurationPage.prototype.componentDidMount = function () {\n        this.props.getConfigurations();\n        this.props.getEnv();\n    };\n    ConfigurationPage.prototype.render = function () {\n        var _this = this;\n        var configuration = this.props.configuration;\n        var filter = this.state.filter;\n        var configProps = configuration && configuration.configProps ? configuration.configProps : {};\n        var env = configuration && configuration.env ? configuration.env : {};\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", null,\n                React.createElement(react_jhipster_1.Translate, { contentKey: \"configuration.title\" }, \"Configuration\")),\n            React.createElement(\"span\", null,\n                React.createElement(react_jhipster_1.Translate, { contentKey: \"configuration.filter\" }, \"Filter\")),\n            ' ',\n            React.createElement(reactstrap_1.Input, { type: \"search\", value: filter, onChange: this.setFilter, name: \"search\", id: \"search\" }),\n            React.createElement(\"label\", null, \"Spring configuration\"),\n            React.createElement(reactstrap_1.Table, { className: \"table table-striped table-bordered table-responsive d-table\" },\n                React.createElement(\"thead\", null,\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", { onClick: this.reversePrefix },\n                            React.createElement(react_jhipster_1.Translate, { contentKey: \"configuration.table.prefix\" }, \"Prefix\")),\n                        React.createElement(\"th\", { onClick: this.reverseProperties },\n                            React.createElement(react_jhipster_1.Translate, { contentKey: \"configuration.table.properties\" }, \"Properties\")))),\n                React.createElement(\"tbody\", null, configProps.contexts\n                    ? Object.values(this.getContextList(configProps.contexts))\n                        .filter(this.propsFilterFn)\n                        .map(function (property, propIndex) { return (React.createElement(\"tr\", { key: propIndex },\n                        React.createElement(\"td\", null, property['prefix']),\n                        React.createElement(\"td\", null, Object.keys(property['properties']).map(function (propKey, index) { return (React.createElement(reactstrap_1.Row, { key: index },\n                            React.createElement(reactstrap_1.Col, { md: \"4\" }, propKey),\n                            React.createElement(reactstrap_1.Col, { md: \"8\" },\n                                React.createElement(reactstrap_1.Badge, { className: \"float-right badge-secondary break\" }, JSON.stringify(property['properties'][propKey]))))); })))); })\n                    : null)),\n            env.propertySources\n                ? env.propertySources.map(function (envKey, envIndex) { return (React.createElement(\"div\", { key: envIndex },\n                    React.createElement(\"h4\", null,\n                        React.createElement(\"span\", null, envKey.name)),\n                    React.createElement(reactstrap_1.Table, { className: \"table table-sm table-striped table-bordered table-responsive d-table\" },\n                        React.createElement(\"thead\", null,\n                            React.createElement(\"tr\", { key: envIndex },\n                                React.createElement(\"th\", { className: \"w-40\" }, \"Property\"),\n                                React.createElement(\"th\", { className: \"w-60\" }, \"Value\"))),\n                        React.createElement(\"tbody\", null, Object.keys(envKey.properties)\n                            .filter(_this.envFilterFn)\n                            .map(function (propKey, propIndex) { return (React.createElement(\"tr\", { key: propIndex },\n                            React.createElement(\"td\", { className: \"break\" }, propKey),\n                            React.createElement(\"td\", { className: \"break\" },\n                                React.createElement(\"span\", { className: \"float-right badge badge-secondary break\" }, envKey.properties[propKey].value)))); }))))); })\n                : null));\n    };\n    return ConfigurationPage;\n}(React.Component));\nexports.ConfigurationPage = ConfigurationPage;\nvar mapStateToProps = function (_a) {\n    var administration = _a.administration;\n    return ({\n        configuration: administration.configuration,\n        isFetching: administration.isFetching\n    });\n};\nvar mapDispatchToProps = { getConfigurations: administration_reducer_1.getConfigurations, getEnv: administration_reducer_1.getEnv };\nexports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(ConfigurationPage);\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/configuration/configuration.tsx","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/modules/administration/configuration/configuration.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,2CAAsC;AACtC,yCAA2D;AAC3D,iDAA2C;AAE3C,oEAAsE;AAetE;IAAuC,6CAAiE;IAAxG;QAAA,qEAsHC;QArHC,WAAK,GAA4B;YAC/B,MAAM,EAAE,EAAE;YACV,aAAa,EAAE,KAAK;YACpB,iBAAiB,EAAE,KAAK;SACzB,CAAC;QAOF,eAAS,GAAG,UAAA,GAAG;YACb,KAAI,CAAC,QAAQ,CAAC;gBACZ,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK;aACzB,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,iBAAW,GAAG,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAlE,CAAkE,CAAC;QAC/F,mBAAa,GAAG,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAzE,CAAyE,CAAC;QAExG,mBAAa,GAAG;YACd,KAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,aAAa;aACzC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,uBAAiB,GAAG;YAClB,KAAI,CAAC,QAAQ,CAAC;gBACZ,iBAAiB,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,iBAAiB;aACjD,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,oBAAc,GAAG,UAAA,QAAQ;YACvB,OAAA,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;iBACpB,GAAG,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,KAAK,EAAP,CAAO,CAAC;iBACxB,MAAM,CAAC,UAAC,GAAG,EAAE,CAAC,IAAK,OAAA,sBAAM,GAAG,EAAK,CAAC,EAAG,EAAlB,CAAkB,CAAC;QAFzC,CAEyC,CAAC;;IAkF9C,CAAC;IA/GC,6CAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IA4BD,kCAAM,GAAN;QAAA,iBA+EC;QA9ES,IAAA,wCAAa,CAAgB;QAC7B,IAAA,0BAAM,CAAgB;QAC9B,IAAM,WAAW,GAAG,aAAa,IAAI,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;QAChG,IAAM,GAAG,GAAG,aAAa,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACxE,OAAO,CACL;YACE;gBACE,oBAAC,0BAAS,IAAC,UAAU,EAAC,qBAAqB,oBAA0B,CAClE;YACL;gBACE,oBAAC,0BAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CAC1D;YAAC,GAAG;YACX,oBAAC,kBAAK,IAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,EAAC,QAAQ,EAAC,EAAE,EAAC,QAAQ,GAAG;YAC1F,0DAAmC;YACnC,oBAAC,kBAAK,IAAC,SAAS,EAAC,6DAA6D;gBAC5E;oBACE;wBACE,4BAAI,OAAO,EAAE,IAAI,CAAC,aAAa;4BAC7B,oBAAC,0BAAS,IAAC,UAAU,EAAC,4BAA4B,aAAmB,CAClE;wBACL,4BAAI,OAAO,EAAE,IAAI,CAAC,iBAAiB;4BACjC,oBAAC,0BAAS,IAAC,UAAU,EAAC,gCAAgC,iBAAuB,CAC1E,CACF,CACC;gBACR,mCACG,WAAW,CAAC,QAAQ;oBACnB,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;yBACrD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;yBAC1B,GAAG,CAAC,UAAC,QAAQ,EAAE,SAAS,IAAK,OAAA,CAC5B,4BAAI,GAAG,EAAE,SAAS;wBAChB,gCAAK,QAAQ,CAAC,QAAQ,CAAC,CAAM;wBAC7B,gCACG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAC3D,oBAAC,gBAAG,IAAC,GAAG,EAAE,KAAK;4BACb,oBAAC,gBAAG,IAAC,EAAE,EAAC,GAAG,IAAE,OAAO,CAAO;4BAC3B,oBAAC,gBAAG,IAAC,EAAE,EAAC,GAAG;gCACT,oBAAC,kBAAK,IAAC,SAAS,EAAC,mCAAmC,IAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAS,CAC1G,CACF,CACP,EAP4D,CAO5D,CAAC,CACC,CACF,CACN,EAd6B,CAc7B,CAAC;oBACN,CAAC,CAAC,IAAI,CACF,CACF;YACP,GAAG,CAAC,eAAe;gBAClB,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,QAAQ,IAAK,OAAA,CAC5C,6BAAK,GAAG,EAAE,QAAQ;oBAChB;wBACE,kCAAO,MAAM,CAAC,IAAI,CAAQ,CACvB;oBACL,oBAAC,kBAAK,IAAC,SAAS,EAAC,sEAAsE;wBACrF;4BACE,4BAAI,GAAG,EAAE,QAAQ;gCACf,4BAAI,SAAS,EAAC,MAAM,eAAc;gCAClC,4BAAI,SAAS,EAAC,MAAM,YAAW,CAC5B,CACC;wBACR,mCACG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;6BAC5B,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC;6BACxB,GAAG,CAAC,UAAC,OAAO,EAAE,SAAS,IAAK,OAAA,CAC3B,4BAAI,GAAG,EAAE,SAAS;4BAChB,4BAAI,SAAS,EAAC,OAAO,IAAE,OAAO,CAAM;4BACpC,4BAAI,SAAS,EAAC,OAAO;gCACnB,8BAAM,SAAS,EAAC,yCAAyC,IAAE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,CAAQ,CAChG,CACF,CACN,EAP4B,CAO5B,CAAC,CACE,CACF,CACJ,CACP,EA1B6C,CA0B7C,CAAC;gBACJ,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC,AAtHD,CAAuC,KAAK,CAAC,SAAS,GAsHrD;AAtHY,8CAAiB;AAwH9B,IAAM,eAAe,GAAG,UAAC,EAAkB;QAAhB,kCAAc;IAAO,OAAA,CAAC;QAC/C,aAAa,EAAE,cAAc,CAAC,aAAa;QAC3C,UAAU,EAAE,cAAc,CAAC,UAAU;KACtC,CAAC;AAH8C,CAG9C,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,iBAAiB,4CAAA,EAAE,MAAM,iCAAA,EAAE,CAAC;AAEzD,kBAAe,qBAAO,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Input, Row, Col, Badge } from 'reactstrap';\nimport { Translate } from 'react-jhipster';\n\nimport { getConfigurations, getEnv } from '../administration.reducer';\n\nexport interface IConfigurationPageProps {\n  isFetching?: boolean;\n  getConfigurations: Function;\n  getEnv: Function;\n  configuration: any;\n}\n\nexport interface IConfigurationPageState {\n  filter: string;\n  reversePrefix: boolean;\n  reverseProperties: boolean;\n}\n\nexport class ConfigurationPage extends React.Component<IConfigurationPageProps, IConfigurationPageState> {\n  state: IConfigurationPageState = {\n    filter: '',\n    reversePrefix: false,\n    reverseProperties: false\n  };\n\n  componentDidMount() {\n    this.props.getConfigurations();\n    this.props.getEnv();\n  }\n\n  setFilter = evt => {\n    this.setState({\n      filter: evt.target.value\n    });\n  };\n\n  envFilterFn = configProp => configProp.toUpperCase().includes(this.state.filter.toUpperCase());\n  propsFilterFn = configProp => configProp.prefix.toUpperCase().includes(this.state.filter.toUpperCase());\n\n  reversePrefix = () => {\n    this.setState({\n      reversePrefix: !this.state.reversePrefix\n    });\n  };\n\n  reverseProperties = () => {\n    this.setState({\n      reverseProperties: !this.state.reverseProperties\n    });\n  };\n\n  getContextList = contexts =>\n    Object.values(contexts)\n      .map((v: any) => v.beans)\n      .reduce((acc, e) => ({ ...acc, ...e }));\n\n  render() {\n    const { configuration } = this.props;\n    const { filter } = this.state;\n    const configProps = configuration && configuration.configProps ? configuration.configProps : {};\n    const env = configuration && configuration.env ? configuration.env : {};\n    return (\n      <div>\n        <h2>\n          <Translate contentKey=\"configuration.title\">Configuration</Translate>\n        </h2>\n        <span>\n          <Translate contentKey=\"configuration.filter\">Filter</Translate>\n        </span>{' '}\n        <Input type=\"search\" value={filter} onChange={this.setFilter} name=\"search\" id=\"search\" />\n        <label>Spring configuration</label>\n        <Table className=\"table table-striped table-bordered table-responsive d-table\">\n          <thead>\n            <tr>\n              <th onClick={this.reversePrefix}>\n                <Translate contentKey=\"configuration.table.prefix\">Prefix</Translate>\n              </th>\n              <th onClick={this.reverseProperties}>\n                <Translate contentKey=\"configuration.table.properties\">Properties</Translate>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {configProps.contexts\n              ? Object.values(this.getContextList(configProps.contexts))\n                  .filter(this.propsFilterFn)\n                  .map((property, propIndex) => (\n                    <tr key={propIndex}>\n                      <td>{property['prefix']}</td>\n                      <td>\n                        {Object.keys(property['properties']).map((propKey, index) => (\n                          <Row key={index}>\n                            <Col md=\"4\">{propKey}</Col>\n                            <Col md=\"8\">\n                              <Badge className=\"float-right badge-secondary break\">{JSON.stringify(property['properties'][propKey])}</Badge>\n                            </Col>\n                          </Row>\n                        ))}\n                      </td>\n                    </tr>\n                  ))\n              : null}\n          </tbody>\n        </Table>\n        {env.propertySources\n          ? env.propertySources.map((envKey, envIndex) => (\n              <div key={envIndex}>\n                <h4>\n                  <span>{envKey.name}</span>\n                </h4>\n                <Table className=\"table table-sm table-striped table-bordered table-responsive d-table\">\n                  <thead>\n                    <tr key={envIndex}>\n                      <th className=\"w-40\">Property</th>\n                      <th className=\"w-60\">Value</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Object.keys(envKey.properties)\n                      .filter(this.envFilterFn)\n                      .map((propKey, propIndex) => (\n                        <tr key={propIndex}>\n                          <td className=\"break\">{propKey}</td>\n                          <td className=\"break\">\n                            <span className=\"float-right badge badge-secondary break\">{envKey.properties[propKey].value}</span>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n              </div>\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ administration }) => ({\n  configuration: administration.configuration,\n  isFetching: administration.isFetching\n});\n\nconst mapDispatchToProps = { getConfigurations, getEnv };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigurationPage);\n"]}]}