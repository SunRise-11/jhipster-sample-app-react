{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/config/translation.ts","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/config/translation.ts","mtime":1522786296905},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/* global: require*/\nvar react_jhipster_1 = require(\"react-jhipster\");\nvar lodash_1 = require(\"lodash\");\nvar locale_1 = require(\"app/shared/reducers/locale\");\nvar mergeTranslations = function (requireContext) {\n    return requireContext.keys().reduce(function (merged, key) { return lodash_1.merge(tslib_1.__assign({}, merged), tslib_1.__assign({}, requireContext(key))); }, {});\n};\n// tslint:disable:object-literal-key-quotes\nvar translations = {\n    en: mergeTranslations(require.context('../../i18n/en', false, /.json$/))\n};\n// tslint:enable\nvar currentLocale;\nvar savedLocale = react_jhipster_1.Storage.local.get('locale', 'en');\nreact_jhipster_1.TranslatorContext.setDefaultLocale('en');\nreact_jhipster_1.TranslatorContext.setRenderInnerTextForMissingKeys(false);\nexports.locales = Object.keys(translations);\nexports.registerLocales = function (store) {\n    exports.locales.forEach(function (key) {\n        react_jhipster_1.TranslatorContext.registerTranslations(key, translations[key]);\n    });\n    store.subscribe(function () {\n        var previousLocale = currentLocale;\n        currentLocale = store.getState().locale.currentLocale;\n        if (previousLocale !== currentLocale) {\n            react_jhipster_1.Storage.local.set('locale', currentLocale);\n            react_jhipster_1.TranslatorContext.setLocale(currentLocale);\n        }\n    });\n    store.dispatch(locale_1.setLocale(savedLocale));\n    return savedLocale;\n};\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/config/translation.ts","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/config/translation.ts"],"names":[],"mappings":";;;AAAA,oBAAoB;AACpB,iDAA4D;AAC5D,iCAA+B;AAE/B,qDAAuD;AAEvD,IAAM,iBAAiB,GAAG,UAAA,cAAc;IACtC,OAAA,cAAc,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,GAAG,IAAK,OAAA,cAAK,sBAAM,MAAM,wBAAS,cAAc,CAAC,GAAG,CAAC,EAAG,EAAhD,CAAgD,EAAE,EAAE,CAAC;AAAnG,CAAmG,CAAC;AAEtG,2CAA2C;AAC3C,IAAM,YAAY,GAAG;IACnB,EAAE,EAAE,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;CACzE,CAAC;AACF,gBAAgB;AAEhB,IAAI,aAAa,CAAC;AAClB,IAAM,WAAW,GAAG,wBAAO,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACtD,kCAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACzC,kCAAiB,CAAC,gCAAgC,CAAC,KAAK,CAAC,CAAC;AAE7C,QAAA,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAEpC,QAAA,eAAe,GAAG,UAAA,KAAK;IAClC,eAAO,CAAC,OAAO,CAAC,UAAA,GAAG;QACjB,kCAAiB,CAAC,oBAAoB,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IACH,KAAK,CAAC,SAAS,CAAC;QACd,IAAM,cAAc,GAAG,aAAa,CAAC;QACrC,aAAa,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC;QACtD,IAAI,cAAc,KAAK,aAAa,EAAE;YACpC,wBAAO,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;YAC3C,kCAAiB,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SAC5C;IACH,CAAC,CAAC,CAAC;IACH,KAAK,CAAC,QAAQ,CAAC,kBAAS,CAAC,WAAW,CAAC,CAAC,CAAC;IACvC,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC","sourcesContent":["/* global: require*/\nimport { TranslatorContext, Storage } from 'react-jhipster';\nimport { merge } from 'lodash';\n\nimport { setLocale } from 'app/shared/reducers/locale';\n\nconst mergeTranslations = requireContext =>\n  requireContext.keys().reduce((merged, key) => merge({ ...merged }, { ...requireContext(key) }), {});\n\n// tslint:disable:object-literal-key-quotes\nconst translations = {\n  en: mergeTranslations(require.context('../../i18n/en', false, /.json$/))\n};\n// tslint:enable\n\nlet currentLocale;\nconst savedLocale = Storage.local.get('locale', 'en');\nTranslatorContext.setDefaultLocale('en');\nTranslatorContext.setRenderInnerTextForMissingKeys(false);\n\nexport const locales = Object.keys(translations);\n\nexport const registerLocales = store => {\n  locales.forEach(key => {\n    TranslatorContext.registerTranslations(key, translations[key]);\n  });\n  store.subscribe(() => {\n    const previousLocale = currentLocale;\n    currentLocale = store.getState().locale.currentLocale;\n    if (previousLocale !== currentLocale) {\n      Storage.local.set('locale', currentLocale);\n      TranslatorContext.setLocale(currentLocale);\n    }\n  });\n  store.dispatch(setLocale(savedLocale));\n  return savedLocale;\n};\n"]}]}