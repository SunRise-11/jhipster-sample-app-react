{"remainingRequest":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js??ref--4-3!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/config/notification-middleware.ts","dependencies":[{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/config/notification-middleware.ts","mtime":1522786296877},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/ts-loader/index.js","mtime":1521265445000},{"path":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_jhipster_1 = require(\"react-jhipster\");\nvar react_toastify_1 = require(\"react-toastify\");\nvar addErrorAlert = function (message, key, data) {\n    key = key ? key : message;\n    react_toastify_1.toast.error(react_jhipster_1.translate(key, data));\n};\nexports.default = (function () { return function (next) { return function (action) {\n    // If not a promise, continue on\n    if (!react_jhipster_1.isPromise(action.payload)) {\n        return next(action);\n    }\n    /**\n     *\n     * The notification middleware serves to dispatch the initial pending promise to\n     * the promise middleware, but adds a `then` and `catch.\n     */\n    return next(action)\n        .then(function (response) {\n        if (action.meta && action.meta.successMessage) {\n            react_toastify_1.toast.success(action.meta.successMessage);\n        }\n        else if (response && response.action && response.action.payload && response.action.payload.headers) {\n            var headers = response.action.payload.headers;\n            var alert_1 = null;\n            var alertParams_1 = null;\n            Object.entries(headers).forEach(function (_a) {\n                var k = _a[0], v = _a[1];\n                if (k.endsWith('app-alert')) {\n                    alert_1 = v;\n                }\n                else if (k.endsWith('app-params')) {\n                    alertParams_1 = v;\n                }\n            });\n            if (alert_1) {\n                var alertParam = alertParams_1;\n                react_toastify_1.toast.success(react_jhipster_1.translate(alert_1, { param: alertParam }));\n            }\n        }\n        return Promise.resolve(response);\n    })\n        .catch(function (error) {\n        if (action.meta && action.meta.errorMessage) {\n            react_toastify_1.toast.error(action.meta.errorMessage);\n        }\n        else if (error && error.response) {\n            var response = error.response;\n            var data = response.data;\n            if (!(response.status === 401 && (error.message === '' || (data && data.path && data.path.indexOf('/api/account') === 0)))) {\n                var i = void 0;\n                switch (response.status) {\n                    // connection refused, server not reachable\n                    case 0:\n                        addErrorAlert('Server not reachable', 'error.server.not.reachable');\n                        break;\n                    case 400:\n                        var headers = Object.entries(response.headers);\n                        var errorHeader_1 = null;\n                        var entityKey_1 = null;\n                        headers.forEach(function (_a) {\n                            var k = _a[0], v = _a[1];\n                            if (k.endsWith('app-error')) {\n                                errorHeader_1 = v;\n                            }\n                            else if (k.endsWith('app-params')) {\n                                entityKey_1 = v;\n                            }\n                        });\n                        if (errorHeader_1) {\n                            var entityName = react_jhipster_1.translate('global.menu.entities.' + entityKey_1);\n                            addErrorAlert(errorHeader_1, errorHeader_1, { entityName: entityName });\n                        }\n                        else if (data !== '' && data.fieldErrors) {\n                            var fieldErrors = data.fieldErrors;\n                            for (i = 0; i < fieldErrors.length; i++) {\n                                var fieldError = fieldErrors[i];\n                                // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                                var convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                                var fieldName = react_jhipster_1.translate(\"jhipsterSampleApplicationReactApp.\" + fieldError.objectName + \".\" + convertedField);\n                                addErrorAlert(\"Error on field \\\"\" + fieldName + \"\\\"\", \"error.\" + fieldError.message, { fieldName: fieldName });\n                            }\n                        }\n                        else if (data !== '' && data.message) {\n                            addErrorAlert(data.message, data.message, data.params);\n                        }\n                        else {\n                            addErrorAlert(data);\n                        }\n                        break;\n                    case 404:\n                        addErrorAlert('Not found', 'error.url.not.found');\n                        break;\n                    default:\n                        if (data !== '' && data.message) {\n                            addErrorAlert(data.message);\n                        }\n                        else {\n                            addErrorAlert(data);\n                        }\n                }\n            }\n        }\n        else if (error && error.message) {\n            react_toastify_1.toast.error(error.message);\n        }\n        else {\n            react_toastify_1.toast.error('Unknown error!');\n        }\n        return Promise.reject(error);\n    });\n}; }; });\n",{"version":3,"file":"/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/config/notification-middleware.ts","sourceRoot":"","sources":["/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/node_modules/tslint-loader/index.js!/Users/julien/workspace/jhipster-automation/samples/jhipster-sample-app-react/src/main/webapp/app/config/notification-middleware.ts"],"names":[],"mappings":"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","sourcesContent":["import { isPromise, translate } from 'react-jhipster';\nimport { toast } from 'react-toastify';\n\nconst addErrorAlert = (message, key?, data?) => {\n  key = key ? key : message;\n  toast.error(translate(key, data));\n};\nexport default () => next => action => {\n  // If not a promise, continue on\n  if (!isPromise(action.payload)) {\n    return next(action);\n  }\n\n  /**\n   *\n   * The notification middleware serves to dispatch the initial pending promise to\n   * the promise middleware, but adds a `then` and `catch.\n   */\n  return next(action)\n    .then(response => {\n      if (action.meta && action.meta.successMessage) {\n        toast.success(action.meta.successMessage);\n      } else if (response && response.action && response.action.payload && response.action.payload.headers) {\n        const headers = response.action.payload.headers;\n        let alert: string = null;\n        let alertParams: string = null;\n        Object.entries(headers).forEach(([k, v]: [string, string]) => {\n          if (k.endsWith('app-alert')) {\n            alert = v;\n          } else if (k.endsWith('app-params')) {\n            alertParams = v;\n          }\n        });\n        if (alert) {\n          const alertParam = alertParams;\n          toast.success(translate(alert, { param: alertParam }));\n        }\n      }\n      return Promise.resolve(response);\n    })\n    .catch(error => {\n      if (action.meta && action.meta.errorMessage) {\n        toast.error(action.meta.errorMessage);\n      } else if (error && error.response) {\n        const response = error.response;\n        const data = response.data;\n        if (!(response.status === 401 && (error.message === '' || (data && data.path && data.path.indexOf('/api/account') === 0)))) {\n          let i;\n          switch (response.status) {\n            // connection refused, server not reachable\n            case 0:\n              addErrorAlert('Server not reachable', 'error.server.not.reachable');\n              break;\n\n            case 400:\n              const headers = Object.entries(response.headers);\n              let errorHeader = null;\n              let entityKey = null;\n              headers.forEach(([k, v]: [string, string]) => {\n                if (k.endsWith('app-error')) {\n                  errorHeader = v;\n                } else if (k.endsWith('app-params')) {\n                  entityKey = v;\n                }\n              });\n              if (errorHeader) {\n                const entityName = translate('global.menu.entities.' + entityKey);\n                addErrorAlert(errorHeader, errorHeader, { entityName });\n              } else if (data !== '' && data.fieldErrors) {\n                const fieldErrors = data.fieldErrors;\n                for (i = 0; i < fieldErrors.length; i++) {\n                  const fieldError = fieldErrors[i];\n                  // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                  const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                  const fieldName = translate(`jhipsterSampleApplicationReactApp.${fieldError.objectName}.${convertedField}`);\n                  addErrorAlert(`Error on field \"${fieldName}\"`, `error.${fieldError.message}`, { fieldName });\n                }\n              } else if (data !== '' && data.message) {\n                addErrorAlert(data.message, data.message, data.params);\n              } else {\n                addErrorAlert(data);\n              }\n              break;\n\n            case 404:\n              addErrorAlert('Not found', 'error.url.not.found');\n              break;\n\n            default:\n              if (data !== '' && data.message) {\n                addErrorAlert(data.message);\n              } else {\n                addErrorAlert(data);\n              }\n          }\n        }\n      } else if (error && error.message) {\n        toast.error(error.message);\n      } else {\n        toast.error('Unknown error!');\n      }\n      return Promise.reject(error);\n    });\n};\n"]}]}